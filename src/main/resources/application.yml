services:
  connection:
    database:
      name: ${DB_DATABASE}
      host: ${DB_HOST}
      user: ${DB_USER}
      psw : ${DB_PSW}
  security:
    ssl:
      enable:   ${SSL_ENABLE:false}
      type:     ${SSL_TYPE:PKCS12}
      store:    ${SSL_STORE:classpath:keystore.p12}
      password: ${SSL_PASSWORD}
      alias:    ${SSL_ALIAS}
    cors:
      allowed-origins:    ${CORS_ALLOWED_ORIGINS}
      allowed-methods:    ${CORS_ALLOWED_METHODS}
      allowed-headers:    ${CORS_ALLOWED_HEADERS}
      exposed-headers:    ${CORS_EXPOSED_HEADERS}
      allow-credentials:  ${CORS_ALLOW_CREDENTIALS}
      max-age:            ${CORS_MAX_AGE}
    jwt:
      token:
        private-key: classpath:keys/private.key
        public-key: classpath:keys/public.pem
        expiration-at: ${JWT_EXPIRE_AT}
        expiration-rt: ${JWT_EXPIRE_RT}


server:
  port: 8080
  ssl:
    enabled: ${services.security.ssl.enable}
    key-store-type: ${services.security.ssl.type}
    key-store: ${services.security.ssl.store}
    key-store-password: ${services.security.ssl.password}
    key-alias: ${services.security.ssl.alias}
spring:
  profiles:
    active: prod,doc
  datasource:
    url: jdbc:postgresql://${services.connection.database.host}/${services.connection.database.name}
    username: ${services.connection.database.user}
    password: ${services.connection.database.psw}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  application:
    name: auth-service

management:
  endpoints:
    web:
      exposure:
        include: health, metrics, info
  endpoint:
    health:
      show-details: always
logging:
  level:
    root: INFO
    org.springframework.web: INFO




